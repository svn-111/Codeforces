//Newton


#include<bits/stdc++.h>
using namespace std;
int n,cnt=0;
double x[100],y[100][100],approx_res[100];
double productTerm(int i,double value)
{
    double pro=1;
    int j;
    for(j=0; j<i; j++)
    {
        pro=pro*(value-x[j]);
    }
    return pro;
}
double applyFormula(double value)
{
    double sum=y[0][0];
    int i,j;
    for(i=1; i<n; i++)
    {
        sum=sum+(productTerm(i,value)*y[0][i]);
    }
    return sum;
}
void divideDiffTable()
{
    int i,j;
    for(i=1; i<n; i++) //for(i=0;i<degree;i++)
    {
        for(j=0; j<n-i; j++)
        {
            double yy=(y[j][i-1]-y[j+1][i-1]);
            double xx=(x[j]-x[i+j]);
            y[j][i]=yy/xx;
        }
    }
}
int main()
{
    //cout<<fixed<<setprecision(6)<<endl;
    int i,j;
    cout<<"Enter Number of Points :";
    cin>>n;
    for(i=0; i<n; i++)
    {
        cin>>x[i]>>y[i][0];
    }
    divideDiffTable();
    //cout<<"Year\t\t\tApproximate Average Temperature in Degree Celsius "<<endl;
    //cout<<value<<"\t\t"<<approx_x<<endl;
    double approx_x,true_x;
    double value=1.15,h=0.05;
    //cout << "Value \t" << "Interpolated Cube root of x\t" << "True value\t" << "Absolute Error" << endl;
    cout<<value<<"\t\t"<<approx_x<<"\t\t"<<cbrt(value)<<"\t\t"<<abs(approx_x-cbrt(value))<<endl;
    while(value<=1.65)
    {
        approx_x=applyFormula(value);
        approx_res[cnt]=approx_x;
        cout<<value<<"\t\t"<<approx_x<<endl;
        cnt++;
        value=value+h;
    }

    cout<<"\nFunction\t\t\tValue"<<endl;
    double sum=0;
    for(i=0;i<n;i++)
    {
        sum=sum+pow((y[i][0]-approx_res[i]),2);
    }
    cout<<"Mean Squared Error (MSE)\t"<<sum<<endl;
    cout<<"A0\t\t\t\t"<<y[0][0]<<endl;
    cout<<"A1\t\t\t\t"<<y[0][1]<<endl;
    cout<<"A2\t\t\t\t"<<y[0][2]<<endl;
    cout<<"A3\t\t\t\t"<<y[0][3]<<endl;
    return 0;
}
